1. 외래키 때문에 테이블 생성 순서 주의
2. 냉장고 테이블과 라즈베리파이 테이블 합치면서
	냉장고 번호 속성 삭제 및 소유에 라즈베리파이 번호 사용
3. 식품 영양 성분과 최대 섭취량 토의, 현재 속성 영양소들로 표시해 놓음
4. boolean대신 0,1만 되는 tinyint 사용
5. date는 ccyy-mm-dd, time은 hh:mm:ss 포맷의 속성
6. 촬영된 식품의 유통기한은 처음에는 식품 정보의 유통기한이며 수정될 수 있기에 따로 저장
7. 레시피 활용 안할시 recipe 테이블 아래쪽 테이블들 사용안함

create database capstone;
use capstone;

create table member(
	memberID varchar(50) not null,
	memberPW varchar(50),
	name varchar(50),
	email varchar(50),
	birth date,
	gender char(1),
	passedAlarm tinyint,
	imminentAlarm tinyint,
	mealtimeA time,
	mealtimeB time,
	mealtimeC time,
	mealtimeD time,
	mealtimeE time,
	recipeEasy tinyint,
	recipeNormal tinyint,
	recipeHard tinyint,
	recipeTime time,
	CONSTRAINT PK_member PRIMARY KEY (memberID),
	CONSTRAINT CHK_member_gender CHECK ('gender' IN ('M','F'))
);

create table refrigerator(
	raspberryPiID varchar(50) not null,
	raspberryPiPW varchar(50),
	name varchar(50),
	location varchar(50),
	CONSTRAINT PK_refrigerator PRIMARY KEY (raspberryPiID)
);

create table possession(
	memberID varchar(50) not null,
	raspberryPiID varchar(50) not null,
	CONSTRAINT PK_possession PRIMARY KEY (memberID, raspberryPiID),
	CONSTRAINT FK_possession_memberID FOREIGN KEY (memberID) REFERENCES member(memberID),
	CONSTRAINT FK_possession_raspberryPiID FOREIGN KEY (raspberryPiID) REFERENCES refrigerator(raspberryPiID)
);

create table camera(
	cameraID varchar(50) not null,
	raspberryPiID varchar(50) not null,
	server varchar(50),
	CONSTRAINT PK_camera PRIMARY KEY (cameraID),
	CONSTRAINT FK_camera_raspberryPiID FOREIGN KEY (raspberryPiID) REFERENCES refrigerator(raspberryPiID)
);

create table photo(
	photoID varchar(50) not null,
	cameraID varchar(50) not null,
	photoDate date,
	photoTime time,
	CONSTRAINT PK_photo PRIMARY KEY (photoID),
	CONSTRAINT FK_photo_cameraID FOREIGN KEY (cameraID) REFERENCES camera(cameraID)
);

create table food(
	foodName varchar(50) not null,
	shelfLife date,
	영양소들
	CONSTRAINT PK_food PRIMARY KEY (foodName)
);

create table photographedFood(
	photoID varchar(50) not null,
	foodName varchar(50) not null,
	shelfLife date,
	inday date,
	outday date,
	CONSTRAINT PK_photographedFood PRIMARY KEY (photoID, foodName),
	CONSTRAINT FK_photographedFood_photoID FOREIGN KEY (photoID) REFERENCES photo(photoID),
	CONSTRAINT FK_photographedFood_foodName FOREIGN KEY (foodName) REFERENCES food(foodName)
);

create table recipe(
	recipeName varchar(50) not null,
	process varchar(50),
	recipeTime time,
	difficulty varchar(50),
	영양소들
	CONSTRAINT PK_recipe PRIMARY KEY (recipeName),
	CONSTRAINT CHK_recipe_difficulty CHECK ('difficulty' IN ('easy', 'normal', 'hard'))
);

create table ingredients(
	recipeName varchar(50) not null,
	foodName varchar(50) not null,
	CONSTRAINT PK_ingredients PRIMARY KEY (recipeName, foodName),
	CONSTRAINT FK_ingredients_recipeName FOREIGN KEY (recipeName) REFERENCES recipe(recipeName),
	CONSTRAINT FK_ingredients_foodName FOREIGN KEY (foodName) REFERENCES food(foodName)
);

create table recommendedNutrientIntake(
	age int,
	gender char(1),
	영양소들
	CONSTRAINT PK_recommendedNutrientIntake PRIMARY KEY (age, gender),
	CONSTRAINT CHK_recommendedNutrientIntake_gender CHECK ('gender' IN ('M','F'))
);

create table excludedFood(
	memberID varchar(50) not null,
	foodName varchar(50) not null,
	CONSTRAINT PK_excludedFood PRIMARY KEY (memberID, foodName),
	CONSTRAINT FK_excludedFood_memberID FOREIGN KEY (memberID) REFERENCES member(memberID),
	CONSTRAINT FK_excludedFood_foodName FOREIGN KEY (foodName) REFERENCES food(foodName)
);

create table excludedRecipe(
	memberID varchar(50) not null,
	recipeName varchar(50) not null,
	CONSTRAINT PK_excludedRecipe PRIMARY KEY (memberID, recipeName),
	CONSTRAINT FK_excludedRecipe_memberID FOREIGN KEY (memberID) REFERENCES member(memberID),
	CONSTRAINT FK_excludedRecipe_recipeName FOREIGN KEY (recipeName) REFERENCES recipe(recipeName)
);
